stages:
  - build
  - test
  - deploy

build_job:
  stage: build
  script:
    - Build/make_build.ps1 -version "0.0.0.0"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - when: on_success

test_job:
  stage: test
  script:
   - Build/make_test.ps1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: false
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - when: on_success
      allow_failure: true
  artifacts:
    name: "test-results"
    paths:
      - ./*/TestResults/*.trx
      - ./*/TestResults/*.html
    expire_in: 1 week
    when: always

deploy_job_win:
  stage: deploy
  only:
    - /^\d+\..*$/
  except:
    - branches
  script:
    - Build/make_publish.ps1 -projectName "$env:CI_PROJECT_NAME" -runtime win10-x64 -version "$env:CI_COMMIT_REF_NAME" -publshFolder "$env:CI_PROJECT_NAME-$env:CI_COMMIT_REF_NAME"
  artifacts:
    name: "$env:CI_PROJECT_NAME-$env:CI_COMMIT_REF_NAME-win10-x64"
    paths:
      - "$env:CI_PROJECT_NAME-$env:CI_COMMIT_REF_NAME"
    expire_in: 1 month
    
deploy_job_linux:
  stage: deploy
  only:
    - /^\d+\..*$/
  except:
    - branches
  script:
    - Build/make_publish.ps1 -projectName "$env:CI_PROJECT_NAME" -runtime linux-x64 -version "$env:CI_COMMIT_REF_NAME" -publshFolder "$env:CI_PROJECT_NAME-$env:CI_COMMIT_REF_NAME"
  artifacts:
    name: "$env:CI_PROJECT_NAME-$env:CI_COMMIT_REF_NAME-linux-x64"
    paths:
      - "$env:CI_PROJECT_NAME-$env:CI_COMMIT_REF_NAME"
    expire_in: 1 month