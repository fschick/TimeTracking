/*
 * Time Tracking Report API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = FS.TimeTracking.Report.Client.Client.FileParameter;
using OpenAPIDateConverter = FS.TimeTracking.Report.Client.Client.OpenAPIDateConverter;

namespace FS.TimeTracking.Report.Client.Model
{
    /// <summary>
    /// Time sheet report grid data transfer object.
    /// </summary>
    [DataContract(Name = "ActivityReportTimeSheetDto")]
    public partial class ActivityReportTimeSheetDto : IEquatable<ActivityReportTimeSheetDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityReportTimeSheetDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ActivityReportTimeSheetDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityReportTimeSheetDto" /> class.
        /// </summary>
        /// <param name="id">The unique identifier of the entity. (required).</param>
        /// <param name="startDate">Gets or sets the start date. (required).</param>
        /// <param name="endDate">Gets or sets the end date..</param>
        /// <param name="duration">Gets or sets the total working time..</param>
        /// <param name="comment">Gets or sets the comment..</param>
        /// <param name="issue">Gets or sets the related issue/ticket/... ..</param>
        /// <param name="customerTitle">Gets or sets the customer title..</param>
        /// <param name="projectTitle">Gets or sets the project title..</param>
        /// <param name="activityTitle">Gets or sets the activity title..</param>
        /// <param name="orderTitle">Gets or sets the order title..</param>
        /// <param name="orderNumber">Gets or sets the order number..</param>
        /// <param name="billable">Indicates whether this item is billable. (required).</param>
        /// <param name="customerCompanyName">Gets or sets the name of the customer&#39;s company..</param>
        /// <param name="customerDepartment">Gets or sets the customer&#39;s department..</param>
        /// <param name="customerContactName">Gets or sets the name of the customer&#39;s contact..</param>
        /// <param name="groupBy">Gets or sets entity the report should grouped by..</param>
        public ActivityReportTimeSheetDto(Guid id = default(Guid), DateTime startDate = default(DateTime), DateTime? endDate = default(DateTime?), string duration = default(string), string comment = default(string), string issue = default(string), string customerTitle = default(string), string projectTitle = default(string), string activityTitle = default(string), string orderTitle = default(string), string orderNumber = default(string), bool billable = default(bool), string customerCompanyName = default(string), string customerDepartment = default(string), string customerContactName = default(string), string groupBy = default(string))
        {
            this.Id = id;
            this.StartDate = startDate;
            this.Billable = billable;
            this.EndDate = endDate;
            this.Duration = duration;
            this.Comment = comment;
            this.Issue = issue;
            this.CustomerTitle = customerTitle;
            this.ProjectTitle = projectTitle;
            this.ActivityTitle = activityTitle;
            this.OrderTitle = orderTitle;
            this.OrderNumber = orderNumber;
            this.CustomerCompanyName = customerCompanyName;
            this.CustomerDepartment = customerDepartment;
            this.CustomerContactName = customerContactName;
            this.GroupBy = groupBy;
        }

        /// <summary>
        /// The unique identifier of the entity.
        /// </summary>
        /// <value>The unique identifier of the entity.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the start date.
        /// </summary>
        /// <value>Gets or sets the start date.</value>
        [DataMember(Name = "startDate", IsRequired = true, EmitDefaultValue = false)]
        public DateTime StartDate { get; set; }

        /// <summary>
        /// Gets or sets the end date.
        /// </summary>
        /// <value>Gets or sets the end date.</value>
        [DataMember(Name = "endDate", EmitDefaultValue = true)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or sets the total working time.
        /// </summary>
        /// <value>Gets or sets the total working time.</value>
        [DataMember(Name = "duration", EmitDefaultValue = true)]
        public string Duration { get; set; }

        /// <summary>
        /// Gets or sets the comment.
        /// </summary>
        /// <value>Gets or sets the comment.</value>
        [DataMember(Name = "comment", EmitDefaultValue = true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or sets the related issue/ticket/... .
        /// </summary>
        /// <value>Gets or sets the related issue/ticket/... .</value>
        [DataMember(Name = "issue", EmitDefaultValue = true)]
        public string Issue { get; set; }

        /// <summary>
        /// Gets or sets the customer title.
        /// </summary>
        /// <value>Gets or sets the customer title.</value>
        [DataMember(Name = "customerTitle", EmitDefaultValue = true)]
        public string CustomerTitle { get; set; }

        /// <summary>
        /// Gets or sets the project title.
        /// </summary>
        /// <value>Gets or sets the project title.</value>
        [DataMember(Name = "projectTitle", EmitDefaultValue = true)]
        public string ProjectTitle { get; set; }

        /// <summary>
        /// Gets or sets the activity title.
        /// </summary>
        /// <value>Gets or sets the activity title.</value>
        [DataMember(Name = "activityTitle", EmitDefaultValue = true)]
        public string ActivityTitle { get; set; }

        /// <summary>
        /// Gets or sets the order title.
        /// </summary>
        /// <value>Gets or sets the order title.</value>
        [DataMember(Name = "orderTitle", EmitDefaultValue = true)]
        public string OrderTitle { get; set; }

        /// <summary>
        /// Gets or sets the order number.
        /// </summary>
        /// <value>Gets or sets the order number.</value>
        [DataMember(Name = "orderNumber", EmitDefaultValue = true)]
        public string OrderNumber { get; set; }

        /// <summary>
        /// Indicates whether this item is billable.
        /// </summary>
        /// <value>Indicates whether this item is billable.</value>
        [DataMember(Name = "billable", IsRequired = true, EmitDefaultValue = true)]
        public bool Billable { get; set; }

        /// <summary>
        /// Gets or sets the name of the customer&#39;s company.
        /// </summary>
        /// <value>Gets or sets the name of the customer&#39;s company.</value>
        [DataMember(Name = "customerCompanyName", EmitDefaultValue = true)]
        public string CustomerCompanyName { get; set; }

        /// <summary>
        /// Gets or sets the customer&#39;s department.
        /// </summary>
        /// <value>Gets or sets the customer&#39;s department.</value>
        [DataMember(Name = "customerDepartment", EmitDefaultValue = true)]
        public string CustomerDepartment { get; set; }

        /// <summary>
        /// Gets or sets the name of the customer&#39;s contact.
        /// </summary>
        /// <value>Gets or sets the name of the customer&#39;s contact.</value>
        [DataMember(Name = "customerContactName", EmitDefaultValue = true)]
        public string CustomerContactName { get; set; }

        /// <summary>
        /// Gets or sets entity the report should grouped by.
        /// </summary>
        /// <value>Gets or sets entity the report should grouped by.</value>
        [DataMember(Name = "groupBy", EmitDefaultValue = true)]
        public string GroupBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ActivityReportTimeSheetDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  Issue: ").Append(Issue).Append("\n");
            sb.Append("  CustomerTitle: ").Append(CustomerTitle).Append("\n");
            sb.Append("  ProjectTitle: ").Append(ProjectTitle).Append("\n");
            sb.Append("  ActivityTitle: ").Append(ActivityTitle).Append("\n");
            sb.Append("  OrderTitle: ").Append(OrderTitle).Append("\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  Billable: ").Append(Billable).Append("\n");
            sb.Append("  CustomerCompanyName: ").Append(CustomerCompanyName).Append("\n");
            sb.Append("  CustomerDepartment: ").Append(CustomerDepartment).Append("\n");
            sb.Append("  CustomerContactName: ").Append(CustomerContactName).Append("\n");
            sb.Append("  GroupBy: ").Append(GroupBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ActivityReportTimeSheetDto);
        }

        /// <summary>
        /// Returns true if ActivityReportTimeSheetDto instances are equal
        /// </summary>
        /// <param name="input">Instance of ActivityReportTimeSheetDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ActivityReportTimeSheetDto input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.Duration == input.Duration ||
                    (this.Duration != null &&
                    this.Duration.Equals(input.Duration))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.Issue == input.Issue ||
                    (this.Issue != null &&
                    this.Issue.Equals(input.Issue))
                ) && 
                (
                    this.CustomerTitle == input.CustomerTitle ||
                    (this.CustomerTitle != null &&
                    this.CustomerTitle.Equals(input.CustomerTitle))
                ) && 
                (
                    this.ProjectTitle == input.ProjectTitle ||
                    (this.ProjectTitle != null &&
                    this.ProjectTitle.Equals(input.ProjectTitle))
                ) && 
                (
                    this.ActivityTitle == input.ActivityTitle ||
                    (this.ActivityTitle != null &&
                    this.ActivityTitle.Equals(input.ActivityTitle))
                ) && 
                (
                    this.OrderTitle == input.OrderTitle ||
                    (this.OrderTitle != null &&
                    this.OrderTitle.Equals(input.OrderTitle))
                ) && 
                (
                    this.OrderNumber == input.OrderNumber ||
                    (this.OrderNumber != null &&
                    this.OrderNumber.Equals(input.OrderNumber))
                ) && 
                (
                    this.Billable == input.Billable ||
                    this.Billable.Equals(input.Billable)
                ) && 
                (
                    this.CustomerCompanyName == input.CustomerCompanyName ||
                    (this.CustomerCompanyName != null &&
                    this.CustomerCompanyName.Equals(input.CustomerCompanyName))
                ) && 
                (
                    this.CustomerDepartment == input.CustomerDepartment ||
                    (this.CustomerDepartment != null &&
                    this.CustomerDepartment.Equals(input.CustomerDepartment))
                ) && 
                (
                    this.CustomerContactName == input.CustomerContactName ||
                    (this.CustomerContactName != null &&
                    this.CustomerContactName.Equals(input.CustomerContactName))
                ) && 
                (
                    this.GroupBy == input.GroupBy ||
                    (this.GroupBy != null &&
                    this.GroupBy.Equals(input.GroupBy))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.StartDate != null)
                {
                    hashCode = (hashCode * 59) + this.StartDate.GetHashCode();
                }
                if (this.EndDate != null)
                {
                    hashCode = (hashCode * 59) + this.EndDate.GetHashCode();
                }
                if (this.Duration != null)
                {
                    hashCode = (hashCode * 59) + this.Duration.GetHashCode();
                }
                if (this.Comment != null)
                {
                    hashCode = (hashCode * 59) + this.Comment.GetHashCode();
                }
                if (this.Issue != null)
                {
                    hashCode = (hashCode * 59) + this.Issue.GetHashCode();
                }
                if (this.CustomerTitle != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerTitle.GetHashCode();
                }
                if (this.ProjectTitle != null)
                {
                    hashCode = (hashCode * 59) + this.ProjectTitle.GetHashCode();
                }
                if (this.ActivityTitle != null)
                {
                    hashCode = (hashCode * 59) + this.ActivityTitle.GetHashCode();
                }
                if (this.OrderTitle != null)
                {
                    hashCode = (hashCode * 59) + this.OrderTitle.GetHashCode();
                }
                if (this.OrderNumber != null)
                {
                    hashCode = (hashCode * 59) + this.OrderNumber.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Billable.GetHashCode();
                if (this.CustomerCompanyName != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerCompanyName.GetHashCode();
                }
                if (this.CustomerDepartment != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerDepartment.GetHashCode();
                }
                if (this.CustomerContactName != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerContactName.GetHashCode();
                }
                if (this.GroupBy != null)
                {
                    hashCode = (hashCode * 59) + this.GroupBy.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
