FROM schicksoftware/dotnet6.0-jre17-nodejs16.0:latest AS build
ARG CI_PROJECT_NAME
ARG CI_COMMIT_REF_NAME
COPY / .
RUN pwsh -Command Build/scripts/timetracking.publish.ps1 -version "${CI_COMMIT_REF_NAME}" -publshFolder "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"

FROM mcr.microsoft.com/dotnet/nightly/aspnet:6.0-alpine3.14 AS base
ARG CI_PROJECT_NAME
ARG CI_COMMIT_REF_NAME

# Install cultures (same approach as Alpine SDK image)
# See https://andrewlock.net/dotnet-core-docker-and-cultures-solving-culture-issues-porting-a-net-core-app-from-windows-to-linux/#the-heart-of-the-issue-alpine-is-small
RUN apk add --no-cache icu-libs

RUN adduser \
  --disabled-password \
  --home /opt/timetracking \
  --gecos '' timetracking \
  && chown -R timetracking /opt/timetracking \
  && mkdir -p /var/timetracking \
  && chown -R timetracking /var/timetracking

USER timetracking

WORKDIR /opt/timetracking

COPY --from=build ./${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME} .

ENV \
  DOTNET_RUNNING_IN_CONTAINER=true \
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false \
  ASPNETCORE_URLS=http://+:5000

EXPOSE 5000

ENTRYPOINT ["dotnet", "FS.TimeTracking.dll"]