name: Publish Demo Application

on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Setup Node 16.x
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: Build
      shell: pwsh
      run: Build/scripts/timetracking.build.ps1
  
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Use Node 16.x
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Use Java
      uses: actions/setup-java@v2
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: Test
      shell: pwsh
      run: Build/scripts/timetracking.test.ps1
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          ./**/TestResults/*.trx
          ./**/TestResults/*.html
          ./FS.TimeTracking.UI.Angular/cypress/screenshots
          ./FS.TimeTracking.UI.Angular/cypress/videos
        retention-days: 10
      if: ${{ always() }}
  
  publish_windows:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Setup Node 16.x
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: Publish
      shell: pwsh
      run: Build/scripts/timetracking.publish.ps1 -version ${{github.ref_name}} -runtime win10-x64 -publshFolder timetracking.${{github.ref_name}}.windows
    - name: Create Windows release artifact
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: timetracking.${{github.ref_name}}.windows.zip
        path: timetracking.${{github.ref_name}}.windows
    - name: Upload Windows release artifact
      uses: softprops/action-gh-release@v1
      with:
        files: timetracking.${{github.ref_name}}.windows.zip
  
  publish_linux:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Setup Node 16.x
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: Publish
      shell: pwsh
      run: Build/scripts/timetracking.publish.ps1 -version ${{github.ref_name}} -runtime linux-x64 -publshFolder timetracking.${{github.ref_name}}.linux
    - name: Create Linux release artifact
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: timetracking.${{github.ref_name}}.linux.zip
        path: timetracking.${{github.ref_name}}.linux
    - name: Upload Linux release artifact
      uses: softprops/action-gh-release@v1
      with:
        files: timetracking.${{github.ref_name}}.linux.zip
        
  publish_docker_image:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build image and push to Docker Hub and GitHub Container Registry
      uses: docker/build-push-action@v2
      with:
        file: ./Build/docker/timetracking.docker
        build-args: |
          CI_PROJECT_NAME=TimeTracking
          CI_COMMIT_REF_NAME=${{github.ref_name}}
        tags: |
          schicksoftware/timetracking:${{github.ref_name}}
          schicksoftware/timetracking:latest
        push: ${{ github.ref == 'refs/heads/main' }}
        # push: true

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  publish_azure_demo:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Setup Node 16.x
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: Publish
      shell: pwsh
      run: Build/scripts/timetracking.publish.ps1 -version ${{github.ref_name}} -publshFolder TimeTracking.${{github.ref_name}}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      env:
        AZURE_WEBAPP_NAME: fs-timetracking
      with:
        app-name: ${{env.AZURE_WEBAPP_NAME}}
        slot-name: test
        publish-profile: ${{secrets.PUBLISH_PROFILE_UAT}}
        package: TimeTracking.${{github.ref_name}}