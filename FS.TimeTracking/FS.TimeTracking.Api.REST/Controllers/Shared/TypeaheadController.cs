using FS.TimeTracking.Abstractions.DTOs.Shared;
using FS.TimeTracking.Api.REST.Routing;
using FS.TimeTracking.Core.Interfaces.Application.Services.Shared;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.FeatureManagement.Mvc;
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Threading;
using System.Threading.Tasks;

namespace FS.TimeTracking.Api.REST.Controllers.Shared;

/// <inheritdoc cref="ITypeaheadApiService" />    
/// <seealso cref="ControllerBase" />
/// <seealso cref="ITypeaheadApiService" />
[ApiV1Controller]
[Authorize]
[ExcludeFromCodeCoverage]
public class TypeaheadController : ControllerBase, ITypeaheadApiService
{
    private readonly ITypeaheadApiService _typeaheadService;

    /// <summary>
    /// Initializes a new instance of the <see cref="TypeaheadController"/> class.
    /// </summary>
    /// <param name="typeaheadService">The typeahead service.</param>
    /// <autogeneratedoc />
    public TypeaheadController(ITypeaheadApiService typeaheadService)
        => _typeaheadService = typeaheadService;

    /// <inheritdoc />
    [HttpGet]
    public async Task<List<TypeaheadDto<Guid, string>>> GetCustomers(bool showHidden, CancellationToken cancellationToken = default)
        => await _typeaheadService.GetCustomers(showHidden, cancellationToken);

    /// <inheritdoc />
    [HttpGet]
    public async Task<List<TypeaheadDto<Guid, string>>> GetProjects(bool showHidden, CancellationToken cancellationToken = default)
        => await _typeaheadService.GetProjects(showHidden, cancellationToken);

    /// <inheritdoc />
    [HttpGet]
    public async Task<List<TypeaheadDto<Guid, string>>> GetOrders(bool showHidden, CancellationToken cancellationToken = default)
        => await _typeaheadService.GetOrders(showHidden, cancellationToken);

    /// <inheritdoc />
    [HttpGet]
    public async Task<List<TypeaheadDto<Guid, string>>> GetActivities(bool showHidden, CancellationToken cancellationToken = default)
        => await _typeaheadService.GetActivities(showHidden, cancellationToken);

    /// <inheritdoc />
    [HttpGet]
    [FeatureGate(Features.Authorization)]
    public async Task<List<TypeaheadDto<Guid, string>>> GetUsers(bool showHidden, CancellationToken cancellationToken = default)
        => await _typeaheadService.GetUsers(showHidden, cancellationToken);

    /// <inheritdoc />
    [HttpGet]
    public async Task<List<TypeaheadDto<string, string>>> GetTimezones(CancellationToken cancellationToken = default)
        => await _typeaheadService.GetTimezones(cancellationToken);
}