using FS.FilterExpressionCreator.Abstractions.Models;
using FS.FilterExpressionCreator.Filters;
using FS.TimeTracking.Core.Models.Application.MasterData;
using FS.TimeTracking.Core.Models.Application.TimeTracking;
using FS.TimeTracking.Core.Models.Filter;
using System;

namespace FS.TimeTracking.Core.Models.Application.Chart;

/// <summary>
/// Common filters used by chart services.
/// </summary>
public class ChartFilter : TimeSheetFilterSet
{
    /// <summary>
    /// The period selected by filter.
    /// </summary>
    public Range<DateTimeOffset> SelectedPeriod { get; }

    /// <summary>
    /// The filter for worked times.
    /// </summary>
    public EntityFilter<TimeSheet> WorkedTimes { get; }

    /// <summary>
    /// The filter for planned times.
    /// </summary>
    public EntityFilter<Order> PlannedTimes { get; }

    /// <summary>
    /// Initializes a new instance of the <see cref="ChartFilter"/> class.
    /// </summary>
    /// <param name="filters">The filters.</param>
    /// <param name="workedTimesFilter">A filter specifying the worked times.</param>
    /// <param name="plannedTimesFilter">A filter specifying the planned times.</param>
    /// <param name="selectedPeriod">The period selected by filter.</param>
    /// <autogeneratedoc />
    public ChartFilter(TimeSheetFilterSet filters, EntityFilter<TimeSheet> workedTimesFilter, EntityFilter<Order> plannedTimesFilter, Range<DateTimeOffset> selectedPeriod)
    {
        TimeSheetFilter = filters.TimeSheetFilter;
        ProjectFilter = filters.ProjectFilter;
        CustomerFilter = filters.CustomerFilter;
        ActivityFilter = filters.ActivityFilter;
        OrderFilter = filters.OrderFilter;
        HolidayFilter = filters.HolidayFilter;
        UserFilter = filters.UserFilter;

        SelectedPeriod = selectedPeriod;
        WorkedTimes = workedTimesFilter;
        PlannedTimes = plannedTimesFilter;
    }
}