<Project Sdk="Microsoft.NET.Sdk.Web">
  <Import Project="../Build/build_core.props" />
  <Import Project="../Build/build_version.props" />

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.2" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="5.0.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="5.0.1" />
    <PackageReference Include="Microsoft.Extensions.Hosting.Systemd" Version="5.0.1" />
    <PackageReference Include="NLog.Web.AspNetCore" Version="4.10.0" />
    <PackageReference Include="Mono.Options" Version="6.6.0.161" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FS.TimeTracking.Api.REST\FS.TimeTracking.Api.REST.csproj" />
    <ProjectReference Include="..\FS.TimeTracking.Application\FS.TimeTracking.Application.csproj" />
    <ProjectReference Include="..\FS.TimeTracking.Repository.MySql\FS.TimeTracking.Repository.MySql.csproj" />
    <ProjectReference Include="..\FS.TimeTracking.Repository.PostgreSql\FS.TimeTracking.Repository.PostgreSql.csproj" />
    <ProjectReference Include="..\FS.TimeTracking.Repository.Sqlite\FS.TimeTracking.Repository.SqLite.csproj" />
    <ProjectReference Include="..\FS.TimeTracking.Repository.SqlServer\FS.TimeTracking.Repository.SqlServer.csproj" />
    <ProjectReference Include="..\FS.TimeTracking.Repository\FS.TimeTracking.Repository.csproj" />
    <ProjectReference Include="..\FS.TimeTracking.Shared\FS.TimeTracking.Shared.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="FS.TimeTracking.config.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="FS.TimeTracking.config.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="FS.TimeTracking.config.User.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <None Update="FS.TimeTracking.config.nlog">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <AngularDirectory>../FS.TimeTracking.UI.Angular</AngularDirectory>
  </PropertyGroup>

  <Target Name="GenerateOpenApiSpec" AfterTargets="AfterBuild">
    <Exec Command="dotnet &quot;$(OutputPath)$(AssemblyName).dll&quot; --generate-openapi $(TargetName).openapi.json" />
  </Target>

  <Target Name="GenerateAngularApiClient" AfterTargets="AfterBuild">
    <Exec StandardOutputImportance="low" Command="npx $(AngularDirectory)/node_modules/.bin/openapi-generator-cli generate -c $(AngularDirectory)/openapi-generator/config.json -g typescript-angular --template-dir $(AngularDirectory)/openapi-generator/templates/typescript-angular --import-mappings=DateTime=Date --type-mappings=DateTime=Date -i $(TargetName).openapi.json -o $(AngularDirectory)/src/app/shared/services/api" />
  </Target>

  <Target Name="GenerateValidationSpec" AfterTargets="AfterBuild">
    <Exec Command="dotnet &quot;$(OutputPath)$(AssemblyName).dll&quot; --generate-validation $(AngularDirectory)/src/app/shared/services/form-validation/dto-validations.spec.json" />
  </Target>

</Project>